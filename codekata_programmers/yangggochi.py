# 머쓱이네 양꼬치 가게는 10인분을 먹으면 음료수 하나를 서비스로 줍니다.
# 양꼬치는 1인분에 12,000원, 음료수는 2,000원입니다.
# 정수 n과 k가 매개변수로 주어졌을 때, 양꼬치 n인분과 음료수 k개를 먹었다면 총얼마를 지불해야 하는지 return 하도록 solution 함수를 완성해보세요.

# 0 < n < 1,000
# n / 10 ≤ k < 1,000
# 서비스로 받은 음료수는 모두 마십니다.

# 예시에 따르면
# n이 10을 넘어갈 때마다 2000원을 빼면 된다.
# 하지만 음료수를 마시지 않았을 때, 빼도 되나???
# k = 0인 경우도 나눠야한다.

# 기본적으로
# 12000*n + 2000*k

# if n // 10 > 0:
#     기본 - 2000(n//10)

# if k == 0:
#     12000*n
# if n // 10 > 0:
#     기본 - 2000(n//10)


# def solution(n, k):
#     base_cal = 12000*n + 2000*k
#     if n//10 > 0 :
#         return base_cal - 2000(n//10)
#         # TypeError: 'int' object is not callable
#         # 2000과 (n//10)사이에 * 추가함.
#     else:
#         return 12000*n
# =======================================================
# def solution(n, k):
#     base_cal = 12000*n + 2000*k
#     if n//10 > 0 :
#         return base_cal - 2000*(n//10)
#     else:
#         return 12000*n

# 테스트 3 실패
# ==========================================================

# 제한사항에 걸리는 예시
# solution(11, 0)
# solution(31, 1)
# solution(11, 0)

# 3개 서비스인데 1개만 마셨으면 1개만 빼야함...
# 이런 경우는 제한사항에서 배제됨.

# n이 10보다 크면 k는 무조건 n//10보다 크거나 같음.
# 서비스는 일단 마심.
# ===========================================================
def solution(n, k):
    base_cal = 12000*n + 2000*k
    if n//10 > 0 :
        return base_cal - 2000*(n//10)
    else:
        return base_cal


# k는 n의 10의 자리 수 이상이다.
# else에서 (9,2)라면
    
# 경우를 많이 나누니까 base_cal 대신에 12000*n을 놓음.